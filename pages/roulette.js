import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Roulette.module.css'

import VideoUpload from '../components/UploadVideo'
import Link from 'next/link'
import VideoPlayer from '../components/VideoPlayer'
import { useState } from 'react'
import { getRandomVideo, getSpecificVideo } from '../lib/catalog'

export default function Home() {

    const [current, setCurrent] = useState();
    const [history, setHistory] = useState([])
    const [error, setError] = useState()
    const [currentHistory, setCurrentHistory] = useState(0);

  return (
    <div className={styles.container}>
      <Head>
        <title>OurTube</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>



      <main className={styles.main}>
        <div className={styles.controls}>
            {/* current: {currentHistory } - length: {history.length} */}
            <div>
              {/* <button className={styles.next} onClick={handlePrevious} >History</button> */}
              <button className={styles.next} onClick={handleNext} >Next</button>
            </div>

        </div>
        {current && 
          <>
            <VideoPlayer id={current.id} onEnded={() => {handleNext()}} /> 
            {error && error.code}
            <h2>{current.title}</h2>
          </>
        }
        
        
      </main>
    </div>
  )
  async function handleNext() {

    const cHistory = currentHistory + 1;

    if (currentHistory < history.length) {
        const previousId = history[currentHistory - 1];
    
        console.log({cHistory, previousId, currentHistory, history})
        
        const video = await getSpecificVideo(previousId);
        
        setCurrent(video.data);
        setCurrentHistory(cHistory)
        return; 
    }

    const video = await (await getRandomVideo(history))
    if (video.error) {

      setError(error);
      setHistory([]);
      setCurrentHistory(0)
      return;

    }

    const data = video.data;

    history.push(data.id)
    setCurrent(data)
    setCurrentHistory(cHistory)
  
  }
  async function handlePrevious() {

    const cHistory = currentHistory - 1;
    const previousId = history[currentHistory -1];

    // console.log({cHistory, previousId, currentHistory, history})
    
    const video = await getSpecificVideo(previousId);
    
    setCurrent(video.data);
    setCurrentHistory(cHistory)

  }

}


export const getServerSideProps = async (context) => {

  const random = getRandomVideo([])

return {
  props: {
      query: context.query, 
    },
};
};
